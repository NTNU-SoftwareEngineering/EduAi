services:

  frontend:

    build:

      context: ./frontend           # Dockerfile 位于 frontend 文件夹

    ports:

      - "3000:80"                   # 将主机的 3000 端口映射到容器的 80 端口

    volumes:

      - ./frontend:/usr/share/nginx/html  # 挂载本地 frontend 文件夹到 nginx 的静态文件目录

    networks:

      - moodle-network



  backend:

    build: ./moodle-backend               # 后端的 Dockerfile 位于 moodle-backend 文件夹

    ports:

      - "8080:80"                         # 将主机的 8080 端口映射到容器的 80 端口

    volumes:

      - moodle_app:/var/www/html/moodle         # 使用命名卷替代绑定挂载

      - ./apache2.conf:/etc/apache2/apache2.conf      # 将 Apache 配置挂载到容器中

      - moodle-data:/var/moodledata                 # 确保 Moodle 数据目录持久化

    depends_on:

      - db

    networks:

      - moodle-network

    environment:

      MOODLE_DB_HOST: db

      MOODLE_DB_NAME: moodle_db

      MOODLE_DB_USER: moodleuser

      MOODLE_DB_PASSWORD: yourpassword

      MOODLE_URL: http://localhost:8080



  db:

    image: mysql:8.0

    environment:

      MYSQL_ROOT_PASSWORD: rootpassword

      MYSQL_DATABASE: moodle_db

      MYSQL_USER: moodleuser

      MYSQL_PASSWORD: yourpassword

    volumes:

      - ./moodle-db-backup:/docker-entrypoint-initdb.d  # 初始 SQL 脚本

      - db_data:/var/lib/mysql                          # 持久化数据

    networks:

      - moodle-network



networks:

  moodle-network:



volumes:

  db_data:

  moodle-data:

  moodle_app:
